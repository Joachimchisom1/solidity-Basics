{
	"id": "9ff043c2e11300dacb86d3d50fc89854",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.13",
	"solcLongVersion": "0.8.13+commit.abaa5c0e",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/visibilites.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity >=0.7.0 <0.9.0;\r\n\r\n// 1.  PUBLIC\r\n// contract initialContract {\r\n\r\n// // Public Visibility function\r\n//      //1.  We can use it every where,\r\n//     // 2.  Inside the contract,\r\n//     // 3.  Deriving contract.\r\n//     // 4.  Other contract.  \r\n//     function publicFunction() public pure returns(string memory) {\r\n//         return \"public\";\r\n//     }\r\n\r\n//     string public pub = publicFunction();\r\n// }\r\n\r\n// // 3.  Deriving contract.\r\n// contract second is initialContract {\r\n\r\n// }\r\n\r\n//  // 4.  Other contract.  \r\n//  contract second1 {\r\n//      initialContract i = new initialContract();\r\n//      string public call = i.publicFunction();\r\n// \r\n\r\n\r\n\r\n// // 2. PRIVATE\r\n\r\n// contract initialContract {\r\n//     // 1. We only can use it inside the contract where it's placed.\r\n//     // 2. Neither derived nor other contracts.\r\n\r\n//     function privateFunction() private pure returns(string memory) {\r\n//         return \"private\";\r\n//     }\r\n\r\n//     string public pri = privateFunction();\r\n// }\r\n\r\n\r\n\r\n// // 2. INTERNAL\r\n\r\n// contract initialContract {\r\n//     // 1. We  can use it inside the contract.\r\n//     // 2. Also Deriving Contract.\r\n//     // 3. Not in other contract\r\n\r\n//     function internalFunction() internal pure returns(string memory) {\r\n//         return \"internal\";\r\n//     }\r\n\r\n//     string public inter = internalFunction();\r\n// }\r\n\r\n// // // 2.  Deriving contract.\r\n// contract second is initialContract {\r\n//     string public call = internalFunction();\r\n// }"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"sources": {
			"contracts/visibilites.sol": {
				"ast": {
					"absolutePath": "contracts/visibilites.sol",
					"exportedSymbols": {},
					"id": 2,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "35:31:0"
						}
					],
					"src": "35:1507:0"
				},
				"id": 0
			}
		}
	}
}